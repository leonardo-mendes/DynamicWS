name: soap-connector
environment: prd
module: com
namespace: "com"

replicaCount: 1

container:
  ports:
    containerPort: 9090
  env:
    default:
      # Configuracao JVM
      JAVA_OPTS: "-Xmx256m -Xms128m -XX:MetaspaceSize=64M -XX:MaxMetaspaceSize=128M"
    secret:
      # Configuracao Spring Boot
      SPRING_BOOT_ACTIVE_PROFILE: "ENVIRONMENT:cvortex-env-config"

      # Config Server
      CONFIG_SERVER_SECURITY_URI: "CONFIG_SERVER_SECURITY_URI:cvortex-env-config"
      CONFIG_SERVER_SECURITY_USER_NAME: "CONFIG_SERVER_SECURITY_USER_NAME:cvortex-auth-config"
      CONFIG_SERVER_SECURITY_USER_PASSWORD: "CONFIG_SERVER_SECURITY_USER_PASSWORD:cvortex-auth-config"

      # RabbitMQ para integrar com spring-cloud-starter-bus-amqp
      CONFIG_SERVER_RABBITMQ_HOST: "CONFIG_SERVER_RABBITMQ_HOST:cvortex-env-config"
      CONFIG_SERVER_RABBITMQ_PORT: "CONFIG_SERVER_RABBITMQ_PORT:cvortex-env-config"
      CONFIG_SERVER_RABBITMQ_USER: "CONFIG_SERVER_RABBITMQ_USER:cvortex-auth-config"
      CONFIG_SERVER_RABBITMQ_PASSWORD: "CONFIG_SERVER_RABBITMQ_PASSWORD:cvortex-auth-config"
      CONFIG_SERVER_RABBITMQ_VIRTUAL_HOST: "CONFIG_SERVER_RABBITMQ_VIRTUAL_HOST:cvortex-env-config"

      #Tracing&Logging
      JAEGER_AGENT_PORT: "JAEGER_AGENT_PORT:cvortex-env-config"
    fieldRef:
      JAEGER_AGENT_HOST: "v1:status.hostIP"
    configMap: { }
    resource: { }

image:
  registry: cvortexacr.azurecr.io
  repository: soap-connector
  tag: 0.1.0
  pullPolicy: Always

imagePullSecrets:
  - name: cvortexcred
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podAnnotations:
  prometheus.io/scrape: 'true'
  prometheus.io/path: '/actuator/prometheus'
  prometheus.io/port: '9090'

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  ports:
    name: http
    port: "8080"
    targetPort: "{{ .Values.container.ports.containerPort }}"
    protocol: TCP

livenessProbe:
  enabled: true
  path: /actuator/health
  port: "{{ .Values.container.ports.containerPort }}"
  initialDelaySeconds: 300
  timeoutSeconds: 5

readinessProbe:
  enabled: true
  path: /actuator/health
  port: "{{ .Values.container.ports.containerPort }}"
  initialDelaySeconds: 30
  timeoutSeconds: 1

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 500m
    memory: 768Mi
  requests:
    cpu: 10m
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }

istio:
  enabled: true
  virtualHostname:
    - api.private.cvortex.io
  ingressGateway: private-ingress-gw
  namespace: istio-private
  #Rewrite and Redirect cannot be enabled together. Use it one or the other
  rewrite:
    enabled: false
    uriPrefix: "/{{ .Values.name }}"
    uriRewrite: /
  redirect:
    enabled: false
    uriPrefix: "/"
    uriRedirect: "/crm"
  auth:
    enabled: false
    issuer: jwt-authority.cvortex.io
    jwksUri: http://iam-auth-api.iam.svc.cluster.local:8080/auth/jwks
    forwardOriginalToken: true
    excludePathAuthEnabled: true
    excludePathAuth:
      - /actuator/health
    internalAllowEnabled: true
    internalAllow:
      - cluster.local/ns/prd-*
  whitelist:
    enabled: false
    toPortList: [ ]
    networkList: [ ]
